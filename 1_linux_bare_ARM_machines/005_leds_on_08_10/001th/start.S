
.text
.global _start

_start:

	/* 关闭看门狗 */
	ldr r0, =0x53000000
	ldr r1, =0
	str r1, [r0]


	/* 设置内存: sp 栈 */
	/******************************************************************************
	区分是nor还是nand启动 
	1、Nor flash可以像内存一样读，但是不能像内存一样写，它的写操作有一定时序和格式；
	2、利用Nor flash的特性，可以写0到0地址（这个0地址可能在内存上，也可能在Nor flash上），再读出来；
	3、如果读到的是0，表示0地址上的内容被修改了，那么对应是在ram，也就是在Nand flash上启动；
		否则就是Nor flash启动；
	*******************************************************************************/

	mov r1, #0
	ldr r0, [r1] /* 读出原来的值备份 */
	str r1, [r1] /* 把0写入0地址 */
	ldr r2, [r1] /* r2 = [0] */
	cmp r1, r2	 /* r1 == r2? 如果相等表示是NAND启动*/
	ldr sp, =0x40000000+4096 /* 先假设是nor启动 */
	moveq sp, #4096 /* nand启动 */
	streq r0, [r1]	/* 恢复原来0地址的值 */

	bl main

halt:
	b halt
	
